from naoqi import ALProxy
import time
import sys
import math

robotIP = "127.0.0.1"
Port = 9560

def StiffnessOn(proxy):
    pNames = "Body"
    pStiffnessLists = 1.0
    pTimeLists = 1.0
    proxy.stiffnessInterpolation(pNames, pStiffnessLists, pTimeLists)
    
def WalkToTarget():
	
	StiffnessOn(motionProxy)
	
	try:
        motionProxy = ALProxy("ALMotion", robotIP, Port)
    except Exception, e:
        print "Could not create proxy to ALMotion"
        print "Error was: ", e

	redBallTracker = ALProxy("ALRedBallTracker", robotIP, Port)
	
	while True:
		motionProxy.setWalkTargetVelocity(1.0, 0.0, 0.0, 1.0)	
		PositionArray = redBallTracker.getPosition()
		if PositionArray[0] < 0.25:
			break
			
	motionProxy.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)
	redBallTracker.stopTracker()
	
	    
def main():
    
    WalkToTarget().
    
    theta = 90 
    while theta >=60: 
        crdArry = redBallTracker.getPosition()
        print (crdArry[0])
        print (crdArry[1])
        theta = math.degrees(math.atan(math.fabs(crdArry[0])/math.fabs(crdArry[1])))
        time.sleep(.01)
        print "X theta: ", theta
        motionProxy.setWalkTargetVelocity(0.0, 1.0, 0.0, 1.0)
    
    motionProxy.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)    
    time.sleep(.1)
    while theta >= 35:
        crdArry = redBallTracker.getPosition()
        print (crdArry[0])
        print (crdArry[1])
        theta = math.degrees(math.atan(math.fabs(crdArry[0])/math.fabs(crdArry[1])))
        time.sleep(.01)
        print "Y theta: ", theta
        motionProxy.setWalkTargetVelocity(1.0, 0.0, 0.0, 1.0)
        if crdArry[0] <.6:
            break
    
    motionProxy.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)
    
    time.sleep(1)
       

if __name__ == "__main__":
    robotIp = "127.0.0.1"

    if len(sys.argv) <= 1:
        print "Usage python motion_walk.py robotIP (optional default: 127.0.0.1)"
    else:
        robotIp = sys.argv[1]

    main()
